<?php

/**
 * @file
 * Contains locationentity.module..
 */

use Drupal\Core\Render\Element;
use Drupal\Core\Link;
use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function locationentity_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the locationentity module.
    case 'help.page.locationentity':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_theme().
 */
function locationentity_theme() {
  $theme = [];
  $theme['locationentity'] = [
    'render element' => 'elements',
    'template' => 'locationentity',
  ];
  $theme['locationentity_add_list'] = [
    'render element' => 'content',
    'variables' => ['content' => NULL],
  ];
  return $theme;
}

/**
* Implements hook_theme_suggestions_HOOK().
*/
function locationentity_theme_suggestions_locationentity(array $variables) {
  $suggestions = [];
  $entity = $variables['elements']['#locationentity'];
  $sanitized_view_mode = strtr($variables['elements']['#view_mode'], '.', '_');

  $suggestions[] = 'locationentity__' . $sanitized_view_mode;
  $suggestions[] = 'locationentity__' . $entity->bundle();
  $suggestions[] = 'locationentity__' . $entity->bundle() . '__' . $sanitized_view_mode;
  $suggestions[] = 'locationentity__' . $entity->id();
  $suggestions[] = 'locationentity__' . $entity->id() . '__' . $sanitized_view_mode;
  return $suggestions;
}

/**
 * Prepares variables for Location templates.
 *
 * Default template: locationentity.html.twig.
 *
 * @param array $variables
 *   An associative array containing:
 *   - elements: An associative array containing the user information and any
 *   - attributes: HTML attributes for the containing element.
 */
function template_preprocess_locationentity(array &$variables) {
  // Fetch Location Entity Object.
  $locationentity = $variables['elements']['#locationentity'];

  // Helpful $content variable for templates.
  foreach (Element::children($variables['elements']) as $key) {
    $variables['content'][$key] = $variables['elements'][$key];
  }
}

/**
 * Prepares variables for a custom entity type creation list templates.
 *
 * Default template: locationentity-add-list.html.twig.
 *
 * @param array $variables
 *   An associative array containing:
 *   - content: An array of locationentity-types.
 *
 * @see block_content_add_page()
 */
function template_preprocess_locationentity_add_list(&$variables) {
  $variables['types'] = [];

  foreach ($variables['content'] as $type) {
    /** @var \Drupal\locationentity\LocationTypeInterface $type */
    $variables['types'][$type->id()] = [
      'id' => $type->id(),
      'label' => $type->label(),
      'description' => ['#markup' => $type->getDescription()],
      'add_link' => Link::createFromRoute($type->label(), 'entity.locationentity_type.add_form', [
        'locationentity_type' => $type->id(),
      ]),
    ];
  }
}
